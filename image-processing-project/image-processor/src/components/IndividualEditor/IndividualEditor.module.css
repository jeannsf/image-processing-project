.editorContainer {
  position: fixed;
  inset: 0;
  background: rgba(0, 0, 0, 0.8);
  backdrop-filter: blur(5px);
  z-index: 1000;
  display: flex;
  flex-direction: column;
  overflow: hidden;
}

.header {
  background: #1a1a1a;
  color: #f0f0f0;
  padding: 1rem 2rem;
  display: flex;
  justify-content: space-between;
  align-items: center;
  border-bottom: 1px solid #333;
}

.header h2 {
  margin: 0;
  font-size: 1.5rem;
  font-weight: 600;
}

.closeButton {
  background: none;
  border: none;
  color: #f0f0f0;
  font-size: 1.5rem;
  cursor: pointer;
  padding: 0.5rem;
  border-radius: 4px;
  transition: background-color 0.2s ease;
}

.closeButton:hover {
  background-color: #333;
}

.content {
  flex: 1;
  display: grid;
  grid-template-columns: 1fr 1fr 2fr;
  gap: 1rem;
  padding: 1rem;
  overflow: hidden;
}

.selectionPanel {
  background: #1a1a1a;
  border-radius: 12px;
  padding: 1rem;
  overflow-y: auto;
}

.selectionPanel h3 {
  margin: 0 0 1rem 0;
  color: #f0f0f0;
  font-size: 1.1rem;
  font-weight: 600;
}

.gridProcessingIndicator {
  background: #2a2a2a;
  color: #f0f0f0;
  padding: 0.75rem;
  border-radius: 8px;
  text-align: center;
  margin-bottom: 1rem;
  font-size: 0.9rem;
  border: 1px solid #444;
  animation: pulse 2s infinite;
}

@keyframes pulse {
  0% { opacity: 1; }
  50% { opacity: 0.7; }
  100% { opacity: 1; }
}

.imageGrid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(120px, 1fr));
  gap: 0.75rem;
}

.imageItem {
  background: #2a2a2a;
  border-radius: 8px;
  padding: 0.5rem;
  cursor: pointer;
  transition: all 0.2s ease;
  border: 2px solid transparent;
  text-align: center;
  position: relative;
}

.imageItem:hover {
  background: #333;
  transform: translateY(-2px);
}

.imageItem.selected {
  border-color: #007bff;
  background: #2a3a4a;
}

.imageItem.processing {
  cursor: not-allowed;
  opacity: 0.7;
}

.imageItem img {
  width: 100%;
  height: 80px;
  object-fit: cover;
  border-radius: 4px;
  margin-bottom: 0.5rem;
}

.chromaGridImage {
  background: linear-gradient(45deg, #f0f0f0 25%, transparent 25%), 
              linear-gradient(-45deg, #f0f0f0 25%, transparent 25%), 
              linear-gradient(45deg, transparent 75%, #f0f0f0 75%), 
              linear-gradient(-45deg, transparent 75%, #f0f0f0 75%);
  background-size: 10px 10px;
  background-position: 0 0, 0 5px, 5px -5px, -5px 0px;
}

.imageItem span {
  display: block;
  color: #f0f0f0;
  font-size: 0.8rem;
  font-weight: 500;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

.imageProcessingOverlay {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: rgba(0, 0, 0, 0.7);
  display: flex;
  align-items: center;
  justify-content: center;
  border-radius: 8px;
}

.spinner {
  width: 20px;
  height: 20px;
  border: 2px solid #333;
  border-top: 2px solid #007bff;
  border-radius: 50%;
  animation: spin 1s linear infinite;
}

@keyframes spin {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}

.editorPanel {
  background: #1a1a1a;
  border-radius: 12px;
  padding: 1rem;
  display: flex;
  flex-direction: column;
  gap: 1rem;
  overflow: hidden;
}

.previewSection {
  flex: 1;
  min-height: 0;
}

.previewSection h3 {
  margin: 0 0 1rem 0;
  color: #f0f0f0;
  font-size: 1.1rem;
  font-weight: 600;
}

.previewContainer {
  position: relative;
  width: 100%;
  height: 300px;
  border-radius: 8px;
  overflow: hidden;
  background: linear-gradient(45deg, #f0f0f0 25%, transparent 25%), 
              linear-gradient(-45deg, #f0f0f0 25%, transparent 25%), 
              linear-gradient(45deg, transparent 75%, #f0f0f0 75%), 
              linear-gradient(-45deg, transparent 75%, #f0f0f0 75%);
  background-size: 20px 20px;
  background-position: 0 0, 0 10px, 10px -10px, -10px 0px;
  display: flex;
  align-items: center;
  justify-content: center;
}

.backgroundImage {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  object-fit: cover;
}

.chromaImage {
  position: absolute;
  max-width: 80%;
  max-height: 80%;
  object-fit: contain;
  transition: all 0.1s ease;
  transform-origin: center;
}

.controlsSection {
  flex: 0 0 auto;
}

.controlsSection h3 {
  margin: 0 0 1rem 0;
  color: #f0f0f0;
  font-size: 1.1rem;
  font-weight: 600;
}

.controls {
  display: flex;
  flex-direction: column;
  gap: 1rem;
  margin-bottom: 1.5rem;
}

.controls label {
  display: flex;
  justify-content: space-between;
  align-items: center;
  color: #a0a0a0;
  font-size: 0.9rem;
  font-weight: 500;
}

input[type="range"] {
  width: 60%;
  height: 4px;
  background: #444;
  border-radius: 2px;
  appearance: none;
  cursor: pointer;
  outline: none;
}

input[type="range"]::-webkit-slider-thumb {
  appearance: none;
  width: 16px;
  height: 16px;
  background: #f0f0f0;
  border-radius: 50%;
  border: 2px solid #1a1a1a;
  transition: background 0.2s ease, transform 0.2s ease;
}

input[type="range"]::-webkit-slider-thumb:hover {
  background: #007bff;
  transform: scale(1.1);
}

input[type="range"]::-moz-range-thumb {
  width: 16px;
  height: 16px;
  background: #f0f0f0;
  border-radius: 50%;
  border: 2px solid #1a1a1a;
  cursor: pointer;
}

.checkboxGroup {
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
}

.checkboxLabel {
  display: flex !important;
  align-items: center;
  gap: 0.5rem;
  cursor: pointer;
}

.checkboxLabel input[type="checkbox"] {
  width: 16px;
  height: 16px;
  accent-color: #007bff;
  cursor: pointer;
}

.actions {
  display: flex;
  gap: 1rem;
  justify-content: flex-end;
  border-top: 1px solid #333;
  padding-top: 1rem;
}

.actions button {
  padding: 0.75rem 1.5rem;
  border: none;
  border-radius: 8px;
  font-weight: 600;
  cursor: pointer;
  transition: all 0.2s ease;
}

.resetButton {
  background-color: #6c757d;
  color: white;
}

.resetButton:hover {
  background-color: #5a6268;
}

.exportButton {
  background-color: #28a745;
  color: white;
}

.exportButton:hover {
  background-color: #218838;
}

/* Responsividade */
@media (max-width: 1200px) {
  .content {
    grid-template-columns: 1fr;
    grid-template-rows: auto auto 1fr;
  }
  
  .imageGrid {
    grid-template-columns: repeat(auto-fill, minmax(100px, 1fr));
  }
}

@media (max-width: 768px) {
  .header {
    padding: 1rem;
  }
  
  .content {
    padding: 0.5rem;
    gap: 0.5rem;
  }
  
  .previewContainer {
    height: 200px;
  }
  
  .controls label {
    flex-direction: column;
    align-items: flex-start;
    gap: 0.5rem;
  }
  
  input[type="range"] {
    width: 100%;
  }
  
  .actions {
    flex-direction: column;
  }
  
  .actions button {
    width: 100%;
  }
}